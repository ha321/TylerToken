{
  "contractName": "VacationMood",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "InterfaceId_ERC165",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610610127576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806275a3171461012c57806301ffc9a7146101b557806306fdde0314610219578063081812fc146102a9578063095ea7b31461031657806318160ddd1461036357806319fa8f501461038e57806323b872dd146103f75780632f745c591461046457806342842e0e146104c55780634f558e79146105325780634f6ccce7146105775780636352211e146105b857806370a0823114610625578063715018a61461067c5780638da5cb5b1461069357806395d89b41146106ea578063a22cb4651461077a578063b88d4fde146107c9578063c87b56dd1461087c578063e985e9c514610922578063f2fde38b1461099d575b600080fd5b34801561013857600080fd5b506101b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506109e0565b005b3480156101c157600080fd5b506101ff60048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610a05565b604051808215151515815260200191505060405180910390f35b34801561022557600080fd5b5061022e610a6c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561026e578082015181840152602081019050610253565b50505050905090810190601f16801561029b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102b557600080fd5b506102d460048036038101908080359060200190929190505050610b0e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032257600080fd5b50610361600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b4b565b005b34801561036f57600080fd5b50610378610c90565b6040518082815260200191505060405180910390f35b34801561039a57600080fd5b506103a3610c9d565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b34801561040357600080fd5b50610462600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cc4565b005b34801561047057600080fd5b506104af600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dd1565b6040518082815260200191505060405180910390f35b3480156104d157600080fd5b50610530600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e48565b005b34801561053e57600080fd5b5061055d60048036038101908080359060200190929190505050610e80565b604051808215151515815260200191505060405180910390f35b34801561058357600080fd5b506105a260048036038101908080359060200190929190505050610ef2565b6040518082815260200191505060405180910390f35b3480156105c457600080fd5b506105e360048036038101908080359060200190929190505050610f2a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561063157600080fd5b50610666600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fa8565b6040518082815260200191505060405180910390f35b34801561068857600080fd5b5061069161102c565b005b34801561069f57600080fd5b506106a8611131565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106f657600080fd5b506106ff611157565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561073f578082015181840152602081019050610724565b50505050905090810190601f16801561076c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561078657600080fd5b506107c7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506111f9565b005b3480156107d557600080fd5b5061087a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611335565b005b34801561088857600080fd5b506108a760048036038101908080359060200190929190505050611374565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108e75780820151818401526020810190506108cc565b50505050905090810190601f1680156109145780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561092e57600080fd5b50610983600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061143d565b604051808215151515815260200191505060405180910390f35b3480156109a957600080fd5b506109de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114d1565b005b60006109ea611539565b90506109f6838261155b565b610a0081836115b2565b505050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b045780601f10610ad957610100808354040283529160200191610b04565b820191906000526020600020905b815481529060010190602001808311610ae757829003601f168201915b5050505050905090565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b5682610f2a565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610b9357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610bd35750610bd2813361143d565b5b1515610bde57600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600980549050905090565b6301ffc9a77c01000000000000000000000000000000000000000000000000000000000281565b80610ccf33826115f2565b1515610cda57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610d1657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610d5257600080fd5b610d5c8483611687565b610d66848361178a565b610d7083836119a2565b818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b6000610ddc83610fa8565b82101515610de957600080fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610e3557fe5b9060005260206000200154905092915050565b80610e5333826115f2565b1515610e5e57600080fd5b610e7a8484846020604051908101604052806000815250611335565b50505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000610efc610c90565b82101515610f0957600080fd5b600982815481101515610f1857fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610f9f57600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610fe557600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561108857600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111ef5780601f106111c4576101008083540402835291602001916111ef565b820191906000526020600020905b8154815290600101906020018083116111d257829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561123457600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b8161134033826115f2565b151561134b57600080fd5b611356858585610cc4565b61136285858585611a79565b151561136d57600080fd5b5050505050565b606061137f82610e80565b151561138a57600080fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114315780601f1061140657610100808354040283529160200191611431565b820191906000526020600020905b81548152906001019060200180831161141457829003601f168201915b50505050509050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561152d57600080fd5b61153681611c9b565b50565b60006115566001611548610c90565b611d9790919063ffffffff16565b905090565b6115658282611db3565b600980549050600a60008381526020019081526020016000208190555060098190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6115bb82610e80565b15156115c657600080fd5b80600b600084815260200190815260200160002090805190602001906115ed92919061210e565b505050565b6000806115fe83610f2a565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061166d57508373ffffffffffffffffffffffffffffffffffffffff1661165584610b0e565b73ffffffffffffffffffffffffffffffffffffffff16145b8061167e575061167d818561143d565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff166116a782610f2a565b73ffffffffffffffffffffffffffffffffffffffff161415156116c957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156117865760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b60008060006117998585611e59565b600860008581526020019081526020016000205492506118056001600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611f8890919063ffffffff16565b9150600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561185357fe5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811015156118ad57fe5b90600052602060002001819055506000600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561190957fe5b9060005260206000200181905550600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611969919061218e565b50600060086000868152602001908152602001600020819055508260086000838152602001908152602001600020819055505050505050565b60006119ae8383611fa1565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002001600090919290919091505550806008600084815260200190815260200160002081905550505050565b600080611a9b8573ffffffffffffffffffffffffffffffffffffffff166120fb565b1515611aaa5760019150611c92565b8473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b9f578082015181840152602081019050611b84565b50505050905090810190601f168015611bcc5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611bee57600080fd5b505af1158015611c02573d6000803e3d6000fd5b505050506040513d6020811015611c1857600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611cd757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008183019050828110151515611daa57fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611def57600080fd5b611df982826119a2565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b8173ffffffffffffffffffffffffffffffffffffffff16611e7982610f2a565b73ffffffffffffffffffffffffffffffffffffffff16141515611e9b57600080fd5b611eee6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f8890919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000828211151515611f9657fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561200f57600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120b46001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d9790919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080823b905060008111915050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061214f57805160ff191683800117855561217d565b8280016001018555821561217d579182015b8281111561217c578251825591602001919060010190612161565b5b50905061218a91906121ba565b5090565b8154818355818111156121b5578183600052602060002091820191016121b491906121ba565b5b505050565b6121dc91905b808211156121d85760008160009055506001016121c0565b5090565b905600a165627a7a72305820a3b875b3ca80cdc9c8c4e862961f3a79efe0eb6067f8861745769a41e17e2b3f0029",
  "sourceMap": "252:719:2:-;;;304:69;8:9:-1;5:2;;;30:1;27;20:12;5:2;304:69:2;1651:276:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;648:38:5;273:10;667:18;;648;;;:38;;;:::i;:::-;2566::10;483:10;2585:18;;2566;;;:38;;;:::i;:::-;2610:44;1124:10;2629:24;;2610:18;;;:44;;;:::i;:::-;1714:5:12;1706;:13;;;;;;;;;;;;:::i;:::-;;1735:7;1725;:17;;;;;;;;;;;;:::i;:::-;;1822:48;575:10;1841:28;;1822:18;;;:48;;;:::i;:::-;1876:46;836:10;1895:26;;1876:18;;;:46;;;:::i;:::-;1651:276;;575:10:7;567:5;;:18;;;;;;;;;;;;;;;;;;252:719:2;;986:156:5;1080:10;1064:26;;:12;:26;;;;;1056:35;;;;;;;;1133:4;1097:19;:33;1117:12;1097:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;986:156;:::o;252:719:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "252:719:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:186;;8:9:-1;5:2;;;30:1;27;20:12;5:2;555:186:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;774:142:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;774:142:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2021:70:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2021:70:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4597:111:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4597:111:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4093:277;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4093:277:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3290:87:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3290:87:12;;;;;;;;;;;;;;;;;;;;;;;229:54:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;229:54:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6088:342:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6088:342:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2945:203:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2945:203:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7046:225:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7046:225:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3548:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3548:140:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3701::12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3701:140:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3206:164:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3206:164:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2851:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2851:142:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:7;;;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:7;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:74:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2189:74:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2189:74:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4988:205:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4988:205:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7953:302;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7953:302:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2451:133:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2451:133:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2451:133:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5502:168:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5502:168:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:186:2;619:18;640:17;:15;:17::i;:::-;619:38;;667:22;673:3;678:10;667:5;:22::i;:::-;699:35;712:10;724:9;699:12;:35::i;:::-;555:186;;;:::o;774:142:5:-;857:4;878:19;:33;898:12;878:33;;;;;;;;;;;;;;;;;;;;;;;;;;;871:40;;774:142;;;:::o;2021:70:12:-;2060:6;2081:5;2074:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;:::o;4597:111:10:-;4657:7;4679:14;:24;4694:8;4679:24;;;;;;;;;;;;;;;;;;;;;4672:31;;4597:111;;;:::o;4093:277::-;4154:13;4170:17;4178:8;4170:7;:17::i;:::-;4154:33;;4208:5;4201:12;;:3;:12;;;;4193:21;;;;;;;;4242:5;4228:19;;:10;:19;;;:58;;;;4251:35;4268:5;4275:10;4251:16;:35::i;:::-;4228:58;4220:67;;;;;;;;4321:3;4294:14;:24;4309:8;4294:24;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;4356:8;4351:3;4335:30;;4344:5;4335:30;;;;;;;;;;;;4093:277;;;:::o;3290:87:12:-;3334:7;3356:9;:16;;;;3349:23;;3290:87;:::o;229:54:5:-;273:10;229:54;;;:::o;6088:342:10:-;6199:8;2404:39;2422:10;2434:8;2404:17;:39::i;:::-;2396:48;;;;;;;;6242:1;6225:19;;:5;:19;;;;6217:28;;;;;;;;6274:1;6259:17;;:3;:17;;;;6251:26;;;;;;;;6284:30;6298:5;6305:8;6284:13;:30::i;:::-;6320:32;6336:5;6343:8;6320:15;:32::i;:::-;6358:25;6369:3;6374:8;6358:10;:25::i;:::-;6416:8;6411:3;6395:30;;6404:5;6395:30;;;;;;;;;;;;6088:342;;;;:::o;2945:203:12:-;3051:7;3085:17;3095:6;3085:9;:17::i;:::-;3076:6;:26;3068:35;;;;;;;;3116:11;:19;3128:6;3116:19;;;;;;;;;;;;;;;3136:6;3116:27;;;;;;;;;;;;;;;;;;3109:34;;2945:203;;;;:::o;7046:225:10:-;7161:8;2404:39;2422:10;2434:8;2404:17;:39::i;:::-;2396:48;;;;;;;;7224:42;7241:5;7248:3;7253:8;7224:42;;;;;;;;;;;;;:16;:42::i;:::-;7046:225;;;;:::o;3548:140::-;3603:4;3615:13;3631:10;:20;3642:8;3631:20;;;;;;;;;;;;;;;;;;;;;3615:36;;3681:1;3664:19;;:5;:19;;;;3657:26;;3548:140;;;;:::o;3701::12:-;3760:7;3792:13;:11;:13::i;:::-;3783:6;:22;3775:31;;;;;;;;3819:9;3829:6;3819:17;;;;;;;;;;;;;;;;;;3812:24;;3701:140;;;:::o;3206:164:10:-;3262:7;3277:13;3293:10;:20;3304:8;3293:20;;;;;;;;;;;;;;;;;;;;;3277:36;;3344:1;3327:19;;:5;:19;;;;3319:28;;;;;;;;3360:5;3353:12;;3206:164;;;;:::o;2851:142::-;2907:7;2948:1;2930:20;;:6;:20;;;;2922:29;;;;;;;;2964:16;:24;2981:6;2964:24;;;;;;;;;;;;;;;;2957:31;;2851:142;;;:::o;1001:111:7:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;238:20::-;;;;;;;;;;;;;:::o;2189:74:12:-;2230:6;2251:7;2244:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:74;:::o;4988:205:10:-;5072:10;5065:17;;:3;:17;;;;5057:26;;;;;;;;5126:9;5089:17;:29;5107:10;5089:29;;;;;;;;;;;;;;;:34;5119:3;5089:34;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;5173:3;5146:42;;5161:10;5146:42;;;5178:9;5146:42;;;;;;;;;;;;;;;;;;;;;;4988:205;;:::o;7953:302::-;8085:8;2404:39;2422:10;2434:8;2404:17;:39::i;:::-;2396:48;;;;;;;;8103:34;8116:5;8123:3;8128:8;8103:12;:34::i;:::-;8196:53;8221:5;8228:3;8233:8;8243:5;8196:24;:53::i;:::-;8188:62;;;;;;;;7953:302;;;;;:::o;2451:133:12:-;2508:6;2530:16;2537:8;2530:6;:16::i;:::-;2522:25;;;;;;;;2560:9;:19;2570:8;2560:19;;;;;;;;;;;2553:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2451:133;;;:::o;5502:168:10:-;5608:4;5629:17;:25;5647:6;5629:25;;;;;;;;;;;;;;;:36;5655:9;5629:36;;;;;;;;;;;;;;;;;;;;;;;;;5622:43;;5502:168;;;;:::o;1274:103:7:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;867:102:2:-;916:7;942:20;960:1;942:13;:11;:13::i;:::-;:17;;:20;;;;:::i;:::-;935:27;;867:102;:::o;6081:172:12:-;6142:26;6154:3;6159:8;6142:11;:26::i;:::-;6202:9;:16;;;;6175:14;:24;6190:8;6175:24;;;;;;;;;;;:43;;;;6224:9;6239:8;6224:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6224:24:12;;;;;;;;;;;;;;;;;;;;;;6081:172;;:::o;4066:130::-;4142:16;4149:8;4142:6;:16::i;:::-;4134:25;;;;;;;;4187:4;4165:9;:19;4175:8;4165:19;;;;;;;;;;;:26;;;;;;;;;;;;:::i;:::-;;4066:130;;:::o;8602:438:10:-;8712:4;8726:13;8742:17;8750:8;8742:7;:17::i;:::-;8726:33;;8938:5;8926:17;;:8;:17;;;:60;;;;8978:8;8953:33;;:21;8965:8;8953:11;:21::i;:::-;:33;;;8926:60;:103;;;;8996:33;9013:5;9020:8;8996:16;:33::i;:::-;8926:103;8911:124;;8602:438;;;;;:::o;10094:214::-;10195:6;10174:27;;:17;10182:8;10174:7;:17::i;:::-;:27;;;10166:36;;;;;;;;10248:1;10212:38;;:14;:24;10227:8;10212:24;;;;;;;;;;;;;;;;;;;;;:38;;;;10208:96;;;10295:1;10260:14;:24;10275:8;10260:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;10208:96;10094:214;;:::o;4964:856:12:-;5082:18;5135:22;5198:17;5037:38;5059:5;5066:8;5037:21;:38::i;:::-;5103:16;:26;5120:8;5103:26;;;;;;;;;;;;5082:47;;5160:32;5190:1;5160:11;:18;5172:5;5160:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;5135:57;;5218:11;:18;5230:5;5218:18;;;;;;;;;;;;;;;5237:14;5218:34;;;;;;;;;;;;;;;;;;5198:54;;5292:9;5259:11;:18;5271:5;5259:18;;;;;;;;;;;;;;;5278:10;5259:30;;;;;;;;;;;;;;;;;:42;;;;5344:1;5307:11;:18;5319:5;5307:18;;;;;;;;;;;;;;;5326:14;5307:34;;;;;;;;;;;;;;;;;:38;;;;5706:11;:18;5718:5;5706:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5768:1;5739:16;:26;5756:8;5739:26;;;;;;;;;;;:30;;;;5805:10;5775:16;:27;5792:9;5775:27;;;;;;;;;;;:40;;;;4964:856;;;;;:::o;4459:226::-;4562:14;4525:31;4542:3;4547:8;4525:16;:31::i;:::-;4579:11;:16;4591:3;4579:16;;;;;;;;;;;;;;;:23;;;;4562:40;;4608:11;:16;4620:3;4608:16;;;;;;;;;;;;;;;4630:8;4608:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4608:31:12;;;;;;;;;;;;;;;;;;;;;;4674:6;4645:16;:26;4662:8;4645:26;;;;;;;;;;;:35;;;;4459:226;;;:::o;11774:347:10:-;11913:4;11981:13;11932:16;:3;:14;;;:16::i;:::-;11931:17;11927:49;;;11965:4;11958:11;;;;11927:49;12012:3;11997:36;;;12041:10;12053:5;12060:8;12070:5;11997:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11997:79:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11997:79:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11997:79:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11997:79:10;;;;;;;;;;;;;;;;11981:95;;1488:10;12100:15;;12090:25;;;:6;:25;;;;12082:34;;11774:347;;;;;;;;:::o;1512:171:7:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;1214:123:6:-;1272:9;1297:1;1293;:5;1289:9;;1316:1;1311;:6;;1304:14;;;;;;1331:1;1324:8;;1214:123;;;;:::o;9289:169:10:-;9373:1;9358:17;;:3;:17;;;;9350:26;;;;;;;;9382:25;9393:3;9398:8;9382:10;:25::i;:::-;9444:8;9439:3;9418:35;;9435:1;9418:35;;;;;;;;;;;;9289:169;;:::o;11054:214::-;11156:5;11135:26;;:17;11143:8;11135:7;:17::i;:::-;:26;;;11127:35;;;;;;;;11194:30;11222:1;11194:16;:23;11211:5;11194:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;11168:16;:23;11185:5;11168:23;;;;;;;;;;;;;;;:56;;;;11261:1;11230:10;:20;11241:8;11230:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;11054:214;;:::o;1042:110:6:-;1100:7;1127:1;1122;:6;;1115:14;;;;;;1146:1;1142;:5;1135:12;;1042:110;;;;:::o;10571:204:10:-;10677:1;10645:34;;:10;:20;10656:8;10645:20;;;;;;;;;;;;;;;;;;;;;:34;;;10637:43;;;;;;;;10709:3;10686:10;:20;10697:8;10686:20;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;10742:28;10768:1;10742:16;:21;10759:3;10742:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;10718:16;:21;10735:3;10718:21;;;;;;;;;;;;;;;:52;;;;10571:204;;:::o;437:576:3:-;494:4;506:12;981:4;969:17;961:25;;1007:1;1000:4;:8;993:15;;437:576;;;;:::o;252:719:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.21;\n\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721Token.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n/**\n * @title CryptoPuff\n * CryptoPuff - a contract for my non-fungible crypto puffs.\n */\ncontract VacationMood is ERC721Token, Ownable {\n    function VacationMood() ERC721Token(\"TylerToken\", \"Tyler\") public { }\n\n    /**\n    * @dev Mints a token to an address with a tokenURI.\n    * @param _to address of the future owner of the token\n    * @param _tokenURI token URI for the token\n    */\n    function mintTo(address _to, string _tokenURI) public {\n        uint256 newTokenId = _getNextTokenId();\n        _mint(_to, newTokenId);\n        _setTokenURI(newTokenId, _tokenURI);\n    }\n\n    /**\n    * @dev calculates the next token ID based on totalSupply\n    * @return uint256 for the next token ID\n    */\n    function _getNextTokenId() private view returns (uint256) {\n        return totalSupply().add(1);\n    }\n}\n",
  "sourcePath": "/Users/subraizahmed/Documents/GitHub/TylerToken/token/contracts/TylerToken.sol",
  "ast": {
    "absolutePath": "/Users/subraizahmed/Documents/GitHub/TylerToken/token/contracts/TylerToken.sol",
    "exportedSymbols": {
      "VacationMood": [
        125
      ]
    },
    "id": 126,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 75,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "id": 76,
        "nodeType": "ImportDirective",
        "scope": 126,
        "sourceUnit": 1540,
        "src": "26:70:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 77,
        "nodeType": "ImportDirective",
        "scope": 126,
        "sourceUnit": 386,
        "src": "97:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 78,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1539,
              "src": "277:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$1539",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 79,
            "nodeType": "InheritanceSpecifier",
            "src": "277:11:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 80,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 385,
              "src": "290:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$385",
                "typeString": "contract Ownable"
              }
            },
            "id": 81,
            "nodeType": "InheritanceSpecifier",
            "src": "290:7:2"
          }
        ],
        "contractDependencies": [
          154,
          205,
          385,
          412,
          432,
          439,
          549,
          1133,
          1539
        ],
        "contractKind": "contract",
        "documentation": "@title CryptoPuff\nCryptoPuff - a contract for my non-fungible crypto puffs.",
        "fullyImplemented": true,
        "id": 125,
        "linearizedBaseContracts": [
          125,
          385,
          1539,
          439,
          432,
          412,
          1133,
          549,
          205,
          154
        ],
        "name": "VacationMood",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "370:3:2",
              "statements": []
            },
            "documentation": null,
            "id": 89,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "54796c6572546f6b656e",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "340:12:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9dc6b8e0112d52148d2f771da663bb9ec68f5484f8021580b720591be280f507",
                      "typeString": "literal_string \"TylerToken\""
                    },
                    "value": "TylerToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "54796c6572",
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "354:7:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b1607468b8c3fb1f947062d21ef2bb762e859e5a0cd6cd6699a9064c623bde4f",
                      "typeString": "literal_string \"Tyler\""
                    },
                    "value": "Tyler"
                  }
                ],
                "id": 86,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 83,
                  "name": "ERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1539,
                  "src": "328:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1539_$",
                    "typeString": "type(contract ERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "328:34:2"
              }
            ],
            "name": "VacationMood",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "370:0:2"
            },
            "scope": 125,
            "src": "304:69:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "609:132:2",
              "statements": [
                {
                  "assignments": [
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97,
                      "name": "newTokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 112,
                      "src": "619:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "619:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 100,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 98,
                      "name": "_getNextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "640:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "640:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "619:38:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "673:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "678:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1459
                      ],
                      "referencedDeclaration": 1459,
                      "src": "667:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "667:22:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "712:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 108,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "724:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 106,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1323,
                      "src": "699:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "699:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "699:35:2"
                }
              ]
            },
            "documentation": "@dev Mints a token to an address with a tokenURI.\n@param _to address of the future owner of the token\n@param _tokenURI token URI for the token",
            "id": 112,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mintTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "571:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "584:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "570:31:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "609:0:2"
            },
            "scope": 125,
            "src": "555:186:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "925:44:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "960:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 117,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1284
                          ],
                          "referencedDeclaration": 1284,
                          "src": "942:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "942:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 298,
                      "src": "942:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 116,
                  "id": 122,
                  "nodeType": "Return",
                  "src": "935:27:2"
                }
              ]
            },
            "documentation": "@dev calculates the next token ID based on totalSupply\n@return uint256 for the next token ID",
            "id": 124,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_getNextTokenId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "891:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "916:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "915:9:2"
            },
            "scope": 125,
            "src": "867:102:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 126,
        "src": "252:719:2"
      }
    ],
    "src": "0:972:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/subraizahmed/Documents/GitHub/TylerToken/token/contracts/TylerToken.sol",
    "exportedSymbols": {
      "VacationMood": [
        125
      ]
    },
    "id": 126,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 75,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "id": 76,
        "nodeType": "ImportDirective",
        "scope": 126,
        "sourceUnit": 1540,
        "src": "26:70:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 77,
        "nodeType": "ImportDirective",
        "scope": 126,
        "sourceUnit": 386,
        "src": "97:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 78,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1539,
              "src": "277:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$1539",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 79,
            "nodeType": "InheritanceSpecifier",
            "src": "277:11:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 80,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 385,
              "src": "290:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$385",
                "typeString": "contract Ownable"
              }
            },
            "id": 81,
            "nodeType": "InheritanceSpecifier",
            "src": "290:7:2"
          }
        ],
        "contractDependencies": [
          154,
          205,
          385,
          412,
          432,
          439,
          549,
          1133,
          1539
        ],
        "contractKind": "contract",
        "documentation": "@title CryptoPuff\nCryptoPuff - a contract for my non-fungible crypto puffs.",
        "fullyImplemented": true,
        "id": 125,
        "linearizedBaseContracts": [
          125,
          385,
          1539,
          439,
          432,
          412,
          1133,
          549,
          205,
          154
        ],
        "name": "VacationMood",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "370:3:2",
              "statements": []
            },
            "documentation": null,
            "id": 89,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "54796c6572546f6b656e",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "340:12:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9dc6b8e0112d52148d2f771da663bb9ec68f5484f8021580b720591be280f507",
                      "typeString": "literal_string \"TylerToken\""
                    },
                    "value": "TylerToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "54796c6572",
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "354:7:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b1607468b8c3fb1f947062d21ef2bb762e859e5a0cd6cd6699a9064c623bde4f",
                      "typeString": "literal_string \"Tyler\""
                    },
                    "value": "Tyler"
                  }
                ],
                "id": 86,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 83,
                  "name": "ERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1539,
                  "src": "328:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1539_$",
                    "typeString": "type(contract ERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "328:34:2"
              }
            ],
            "name": "VacationMood",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "370:0:2"
            },
            "scope": 125,
            "src": "304:69:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "609:132:2",
              "statements": [
                {
                  "assignments": [
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97,
                      "name": "newTokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 112,
                      "src": "619:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "619:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 100,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 98,
                      "name": "_getNextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "640:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "640:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "619:38:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "673:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "678:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1459
                      ],
                      "referencedDeclaration": 1459,
                      "src": "667:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "667:22:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "712:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 108,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "724:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 106,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1323,
                      "src": "699:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "699:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "699:35:2"
                }
              ]
            },
            "documentation": "@dev Mints a token to an address with a tokenURI.\n@param _to address of the future owner of the token\n@param _tokenURI token URI for the token",
            "id": 112,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mintTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "571:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "584:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "570:31:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "609:0:2"
            },
            "scope": 125,
            "src": "555:186:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "925:44:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "960:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 117,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1284
                          ],
                          "referencedDeclaration": 1284,
                          "src": "942:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "942:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 298,
                      "src": "942:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 116,
                  "id": 122,
                  "nodeType": "Return",
                  "src": "935:27:2"
                }
              ]
            },
            "documentation": "@dev calculates the next token ID based on totalSupply\n@return uint256 for the next token ID",
            "id": 124,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_getNextTokenId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "891:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "916:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "915:9:2"
            },
            "scope": 125,
            "src": "867:102:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 126,
        "src": "252:719:2"
      }
    ],
    "src": "0:972:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-07-14T00:18:40.447Z"
}